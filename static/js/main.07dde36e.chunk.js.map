{"version":3,"sources":["logo.svg","SearchBar/SearchBar.js","Navbar/Navbar.js","Movie/Movie.js","MovieList/MovieList.js","Hero/Hero.js","Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","props","handleChange","e","setState","value","target","state","onFormSubmit","bind","preventDefault","stopPropagation","this","searchMovies","className","id","onSubmit","onChange","type","placeholder","Component","Navbar","href","Movie","title","useState","isHovered","setIsHovered","hoverHandler","showAddButton","movieSelector","movie","onMouseEnter","onMouseLeave","src","img","alt","undefined","myList","onClick","feed","addToList","height","viewBox","width","xmlns","fill","fillRule","transform","cx","cy","r","stroke","strokeLinecap","d","removeFromList","viewbox","strokeWidth","vectorEffect","x1","y1","x2","y2","length","slice","MovieList","label","movies","map","key","backdrop_path","Hero","selectedMovie","release_date","split","reverse","join","vote_average","overview","poster_path","Dashboard","setMovies","setMyList","comMovies","setComMovies","setSelectedMovie","searchResults","setSearchResults","useEffect","axios","get","then","res","data","localStorage","getItem","JSON","parse","setItem","stringify","includes","comedies","forEach","film","trending","myMovieList","list","filter","movieList","comedyMovies","userSearchResults","term","results","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.07dde36e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n\n  constructor (props){\n    super(props);\n    \n    this.state = {value: ''};\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  handleChange = e => {\n    this.setState({value: e.target.value});\n  }\n\n  onFormSubmit(e){\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.searchMovies(this.state.value);\n    this.setState({value: ''});\n    return false;\n  }\n\n  render() {\n    return (\n      <div>\n       <form className=\"search-bar\" \n       id=\"searchform\"  \n       onSubmit={this.onFormSubmit}> \n       <input\n          onChange={this.handleChange}\n          value={this.state.value}\n          type=\"text\"\n          className=\"input\"\n          id=\"searchMovie\"\n          placeholder=\"Search movies...\"\n        />\n       {/*  <button  type=\"submit\" className=\"search_button\" >\n         Search\n        </button>  */}\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Navbar.css'\nimport SearchBar from '../SearchBar/SearchBar';\n\n\nconst Navbar = (props) => {\n  return (\n    <div className=\"navbar\">\n    <div className=\"logo_container\">\n     <a href=\"/\"> <div className=\"logo\"> NOTFLIX </div></a>\n      </div>\n     \n      <div className=\"search_container\">\n     <SearchBar searchMovies={props.searchMovies} />\n   \n      </div>\n   </div>\n  );\n}\n\nexport default Navbar;","\nimport React, { useEffect, useState } from 'react';\nimport './Movie.css';\n\nconst Movie = (props) => {\n \n  \n  const [ isHovered, setIsHovered ] = useState(false);\n\n  const clickHandler = () => {\n    !props.myList &&\n    props.addToList(props.movie);\n    \n  }\n\n  const minusHandler = () => {\n    props.removeFromList(props.movie);\n    setIsHovered(false);\n\n  }\n\n  const hoverHandler = () => {\n    showAddButton();\n    props.movieSelector(props.movie);\n  }\n\n  const showAddButton = () => {\n    setIsHovered(!isHovered);\n  }\n\n  const truncatedTitle = (title) => {\n    const num = 25;\n    return (title.length <= num )\n    ? title\n    : title.slice(0, num) + '...'\n  }\n\n\n    return (\n      <div className=\"movie_card\" \n        \n        onMouseEnter={hoverHandler}\n        onMouseLeave={hoverHandler}> \n       <img \n        id=\"poster\"\n        className=\"poster\" \n        src={props.img ? `https://image.tmdb.org/t/p/w300/${props.img}` : 'https://uploads.guim.co.uk/2020/03/31/New_Project.png'}\n        alt={`Movie poster for ${props.title}`}></img>\n\n      {(props.myList === undefined && isHovered ) ?\n      <svg onClick={props.feed !== 'My List' ? clickHandler : undefined} className=\"add\" height=\"25\" viewBox=\"0 0 25 25\" width=\"25\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(1 1)\"><circle cx=\"11.5\" cy=\"11.5\" r=\"11.5\" stroke=\"#fff\"/><g stroke=\"#e0e0e0\" strokeLinecap=\"square\"><path d=\"m11.5 6.5v10\"/><path d=\"m16.5 11.5h-10\"/></g></g></svg>\n    : null  \n    }\n      {(isHovered && props.myList) ?\n      <svg className=\"add\" height=\"25\" viewBox=\"0 0 25 25\" width=\"25\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"12.5\" cy=\"12.5\" r=\"11.5\" stroke=\"#fff\"/><g stroke=\"#e0e0e0\" strokeLinecap=\"square\" transform=\"translate(7 6)\"><path d=\"m.93453544 6.00041853 3.62618582 5.59960937\"/><path d=\"m9.63738142 1.20075335-5.07666016 10.39927455\"/></g></g></svg>\n      : null }\n      {(isHovered && props.myList && props.feed === \"My List\") ?\n      <svg  onClick={minusHandler} className=\"minus\" viewbox=\"0 0 25 25\">\n      <circle cx=\"12.5\" cy=\"12.5\" r=\"12\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" vectorEffect=\"non-scaling-stroke\" />\n      <line x1=\"6\" y1=\"12.5\" x2=\"19\" y2=\"12.5\"  fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" vectorEffect=\"non-scaling-stroke\" />\n    </svg>\n      : null }\n\n  <div className=\"title\">{truncatedTitle(props.title)}</div> \n  \n\n   </div>\n   \n    );\n  }\n\n\nexport default Movie;","import React from 'react';\nimport Movie from '../Movie/Movie';\nimport './MovieList.css';\n\nconst MovieList = (props) => {\n  return (\n    <div className=\"movie_wrapper\">\n       <div className=\"list_label\">{props.label}</div> \n      <div className=\"movie_list\">\n        {props.movies.map(movie => (\n          <Movie\n          removeFromList={props.removeFromList}\n          movieSelector={props.movieSelector}\n          myList={movie.myList}\n          feed={props.label}\n          movie={movie} \n          id={movie.id}\n          key={movie.id}\n          title={movie.title}\n          img={movie.backdrop_path}\n          addToList={props.addToList}    \n          />\n        ))\n        }\n      </div>\n\n      </div>\n  );\n}\n\nexport default MovieList;\n","import React, { Component } from 'react';\nimport './Hero.css'\n\nclass Hero extends Component {\n  render() {\n\n    const { selectedMovie } = this.props;\n    return (\n      <div>\n          <div className=\"hero\">\n          {\n          selectedMovie &&\n          <div className=\"hero_wrapper\"> \n            <div className=\"hero_textbox\">\n              \n            <div className=\"hero_title\">{selectedMovie.title}</div>\n  <div className=\"hero_release\"> <div className=\"hero_release red\">Released:</div> {selectedMovie.release_date && selectedMovie.release_date.split(\"-\").reverse().join(\"-\")}</div>\n  <div className=\"hero_rating\">  <div className=\"hero_release red\">IMDB rating: </div> {selectedMovie.vote_average}</div>\n\n          <div className=\"hero_overview\">{selectedMovie.overview}</div> \n            </div>\n            { selectedMovie.poster_path &&\n              <div className=\"hero_image_container\" >\n              <img className=\"hero_image\" src={`https://image.tmdb.org/t/p/w300/${selectedMovie.poster_path}`} />\n                  </div>\n            }\n          </div>\n        \n          }\n        \n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hero;","import React, { useState, useEffect } from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport './Dashboard.css';\nimport MovieList from '../MovieList/MovieList';\nimport Hero from '../Hero/Hero';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n  \n    const [movies, setMovies ] = useState([]);\n    const [myList, setMyList ] = useState( []);\n    const [comMovies, setComMovies ] = useState([]);\n    const [selectedMovie, setSelectedMovie] = useState([]);\n    const [searchResults, setSearchResults] = useState({});\n      \n    useEffect(() => {\n      \n      axios.get(`https://movied.herokuapp.com/discover`).then(res => {\n        const movies = res.data;\n        setMovies(movies);\n        movieSelector(movies[0]);\n      });\n  \n      axios.get(`https://movied.herokuapp.com/categories/35`).then(res => {\n        const comMovies = res.data;\n        setComMovies(comMovies);\n      });\n\n      localStorage.getItem('myList') && setMyList(JSON.parse(localStorage.getItem('myList'))); \n\n    }, []);\n\n    useEffect(() => {\n\n      localStorage.setItem('myList', JSON.stringify(myList));\n    \n    },[myList])\n\n  const movieSelector = (movie) =>{\n    setSelectedMovie(movie);\n  }\n\n  const searchMovies = (term) => {\n   \n    axios.get(`https://movied.herokuapp.com/search?q=${term}`).then(res => {\n      const results = res.data;\n      setSearchResults(() => results); \n      setSelectedMovie(results[0]);\n    });\n  }\n\n  const addToList = (movie) => {\n\n    movie.myList = true;\n\n    !myList.includes(movie) &&\n      setMyList([...myList, movie]);\n\n    let comedies = comMovies;\n      comedies.forEach(film => {\n        if(film.id === movie.id) \n        {film.myList = true }\n      })\n\n      let trending = movies;\n      trending.forEach(film => {\n        if(film.id === movie.id) \n        {film.myList = true}\n      })\n      setMovies(trending);\n      setComMovies(comedies);\n  }\n\n  const removeFromList = (movie) => {\n    movie.myList = undefined;\n    let list = myList.filter(film => film.id != movie.id);\n    setMyList(list);\n\n    let comedies = comMovies;\n      comedies.forEach(film => {\n        if(film.id === movie.id) \n        {film.myList = undefined   }\n      })\n\n      let trending = movies;\n      trending.forEach(film => {\n        if(film.id === movie.id) \n        {film.myList = undefined }\n      })\n      setMovies(trending);\n      setComMovies(comedies);\n  }\n\n  \n    const myMovieList = myList.length > 0 && (\n      <MovieList movies={myList} \n      label={'My List'}\n      movieSelector={movieSelector}\n      removeFromList={removeFromList} />\n    );\n\n    const movieList = (\n      <MovieList\n        movieSelector={movieSelector}\n       \n        movies={movies}\n        addToList={addToList}\n        label={'Trending now'}\n      />\n    );\n\n    const comedyMovies = (\n      <MovieList\n        movieSelector={movieSelector}\n       \n        movies={comMovies}\n        addToList={addToList}\n        label={'Comedy'}\n      />\n    );\n\n    const userSearchResults = (\n      <MovieList\n        movieSelector={movieSelector}\n        \n        movies={searchResults}\n        addToList={addToList}\n        label={'Search results'}\n      />\n    );\n\n    return (\n      \n      <div className='dashboard'>\n        <Navbar searchMovies={searchMovies}/>\n        <Hero selectedMovie={selectedMovie}/>\n        <div className='dashboard-container'>\n        {searchResults.length > 0 \n        ? [userSearchResults]\n        :[myMovieList, movieList, comedyMovies]\n      }\n          \n        </div>\n      </div>\n    );\n  }\n\n\nexport default Dashboard;\n","import React from 'react';\nimport logo from './logo.svg';\n\nimport Dashboard from './Dashboard/Dashboard'\n\nfunction App() {\n  return (\n    \n <Dashboard />\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}